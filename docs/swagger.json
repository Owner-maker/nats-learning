{
    "swagger": "2.0",
    "info": {
        "description": "This service uses a nats streaming server as message broker to get model Order from it and stores into the postgres db \u0026 app's cache. Provides a way to get information about orders from cache via the HTTP requests.",
        "title": "Nats learning service",
        "contact": {
            "name": "Artem Lisitsyn",
            "email": "artem.lisitsynn@gmail.com"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/order/{uid}": {
            "get": {
                "description": "Allows to get specific order from the app's cache via its uid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetOrderById",
                "operationId": "get-order-by-id",
                "parameters": [
                    {
                        "maxLength": 19,
                        "minLength": 19,
                        "type": "string",
                        "description": "order's uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/orders": {
            "get": {
                "description": "Allows to get all orders from the app's cache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "GetAllOrders",
                "operationId": "get-all-orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.getAllOrdersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "http.getAllOrdersResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Order"
                    }
                }
            }
        },
        "models.Delivery": {
            "type": "object",
            "required": [
                "address",
                "city",
                "email",
                "name",
                "phone",
                "region",
                "zip"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 30
                },
                "city": {
                    "type": "string",
                    "maxLength": 30
                },
                "email": {
                    "type": "string",
                    "maxLength": 30
                },
                "name": {
                    "type": "string",
                    "maxLength": 30
                },
                "phone": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "maxLength": 30
                },
                "zip": {
                    "type": "string",
                    "maxLength": 10
                }
            }
        },
        "models.Item": {
            "type": "object",
            "required": [
                "brand",
                "chrt_id",
                "name",
                "nm_id",
                "rid",
                "size",
                "status",
                "track_number"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "chrt_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nm_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "integer"
                },
                "rid": {
                    "type": "string",
                    "maxLength": 21,
                    "minLength": 21
                },
                "sale": {
                    "type": "integer"
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "integer",
                    "minimum": 0
                },
                "total_price": {
                    "type": "integer"
                },
                "track_number": {
                    "type": "string",
                    "maxLength": 14,
                    "minLength": 14
                }
            }
        },
        "models.Order": {
            "type": "object",
            "required": [
                "customer_id",
                "date_created",
                "delivery",
                "delivery_service",
                "entry",
                "items",
                "oof_shard",
                "order_uid",
                "payment",
                "track_number"
            ],
            "properties": {
                "customer_id": {
                    "type": "string",
                    "maxLength": 4,
                    "minLength": 4
                },
                "date_created": {
                    "type": "string",
                    "format": "2006-01-02T06:22:19Z"
                },
                "delivery": {
                    "$ref": "#/definitions/models.Delivery"
                },
                "delivery_service": {
                    "type": "string",
                    "maxLength": 5,
                    "minLength": 5
                },
                "entry": {
                    "type": "string",
                    "maxLength": 4,
                    "minLength": 4
                },
                "internal_signature": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Item"
                    }
                },
                "locale": {
                    "type": "string",
                    "enum": [
                        "ru",
                        "en"
                    ]
                },
                "oof_shard": {
                    "type": "string",
                    "maxLength": 2
                },
                "order_uid": {
                    "type": "string",
                    "maxLength": 19,
                    "minLength": 19
                },
                "payment": {
                    "$ref": "#/definitions/models.Payment"
                },
                "shardkey": {
                    "type": "string"
                },
                "sm_id": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                },
                "track_number": {
                    "type": "string",
                    "maxLength": 14,
                    "minLength": 14
                }
            }
        },
        "models.Payment": {
            "type": "object",
            "required": [
                "bank",
                "currency",
                "payment_dt",
                "provider",
                "transaction"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "bank": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "custom_fee": {
                    "type": "integer",
                    "minimum": 0
                },
                "delivery_cost": {
                    "type": "integer"
                },
                "goods_total": {
                    "type": "integer"
                },
                "payment_dt": {
                    "type": "integer"
                },
                "provider": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "transaction": {
                    "type": "string"
                }
            }
        }
    }
}